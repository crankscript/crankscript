import { cranktest } from '../../libs/test/src/cranktest';

// Note: this file is generated automatically by the prepare-constant-tests.ts script.
// Do not edit this file manually.

cranktest('Constants', (suite) => {
    // @crankscript-constant-tests-start
    suite.spec('playdate', (t) => {
        t.equals(playdate.kButtonA, 32);
        t.equals(playdate.kButtonB, 16);
        t.equals(playdate.kButtonDown, 8);
        t.equals(playdate.kButtonLeft, 1);
        t.equals(playdate.kButtonRight, 2);
        t.equals(playdate.kButtonUp, 4);
    });

    suite.spec('playdate.file', (t) => {
        t.equals(playdate.file.kFileAppend, 8);
        t.equals(playdate.file.kFileRead, 3);
        t.equals(playdate.file.kFileWrite, 4);
        t.equals(playdate.file.kSeekSet, 0);
        t.equals(playdate.file.kSeekFromCurrent, 1);
        t.equals(playdate.file.kSeekFromEnd, 2);
    });

    suite.spec('playdate.graphics', (t) => {
        t.equals(playdate.graphics.kColorBlack, 0);
        t.equals(playdate.graphics.kColorWhite, 1);
        t.equals(playdate.graphics.kColorClear, 2);
        t.equals(playdate.graphics.kColorXOR, 3);
        t.equals(playdate.graphics.kImageUnflipped, 0);
        t.equals(playdate.graphics.kImageFlippedX, 1);
        t.equals(playdate.graphics.kImageFlippedY, 2);
        t.equals(playdate.graphics.kImageFlippedXY, 3);
        t.equals(playdate.graphics.kPolygonFillNonZero, 0);
        t.equals(playdate.graphics.kPolygonFillEvenOdd, 1);
        t.equals(playdate.graphics.kLineCapStyleButt, 0);
        t.equals(playdate.graphics.kLineCapStyleRound, 2);
        t.equals(playdate.graphics.kLineCapStyleSquare, 1);
        t.equals(playdate.graphics.kDrawModeBlackTransparent, 2);
        t.equals(playdate.graphics.kDrawModeCopy, 0);
        t.equals(playdate.graphics.kDrawModeFillBlack, 4);
        t.equals(playdate.graphics.kDrawModeFillWhite, 3);
        t.equals(playdate.graphics.kDrawModeInverted, 7);
        t.equals(playdate.graphics.kDrawModeNXOR, 6);
        t.equals(playdate.graphics.kDrawModeWhiteTransparent, 1);
        t.equals(playdate.graphics.kDrawModeXOR, 5);
        t.equals(playdate.graphics.kStrokeCentered, 0);
        t.equals(playdate.graphics.kStrokeInside, 1);
        t.equals(playdate.graphics.kStrokeOutside, 2);
        t.equals(playdate.graphics.kAlignCenter, 33554433);
        t.equals(playdate.graphics.kAlignLeft, 33554432);
        t.equals(playdate.graphics.kAlignRight, 33554434);
        t.equals(playdate.graphics.kWrapCharacter, 16777217);
        t.equals(playdate.graphics.kWrapClip, 16777216);
        t.equals(playdate.graphics.kWrapWord, 16777218);
    });

    suite.spec('playdate.graphics.font', (t) => {
        t.equals(playdate.graphics.font.kLanguageEnglish, 0);
        t.equals(playdate.graphics.font.kLanguageJapanese, 1);
        t.equals(playdate.graphics.font.kVariantBold, 1);
        t.equals(playdate.graphics.font.kVariantItalic, 2);
        t.equals(playdate.graphics.font.kVariantNormal, 0);
    });

    suite.spec('playdate.graphics.image', (t) => {
        t.equals(playdate.graphics.image.kDitherTypeNone, 0);
        t.equals(playdate.graphics.image.kDitherTypeDiagonalLine, 1);
        t.equals(playdate.graphics.image.kDitherTypeVerticalLine, 2);
        t.equals(playdate.graphics.image.kDitherTypeHorizontalLine, 3);
        t.equals(playdate.graphics.image.kDitherTypeScreen, 4);
        t.equals(playdate.graphics.image.kDitherTypeBayer2x2, 5);
        t.equals(playdate.graphics.image.kDitherTypeBayer4x4, 6);
        t.equals(playdate.graphics.image.kDitherTypeBayer8x8, 7);
        t.equals(playdate.graphics.image.kDitherTypeFloydSteinberg, 8);
        t.equals(playdate.graphics.image.kDitherTypeBurkes, 9);
        t.equals(playdate.graphics.image.kDitherTypeAtkinson, 10);
    });

    suite.spec('playdate.graphics.sprite', (t) => {
        t.equals(playdate.graphics.sprite.kCollisionTypeBounce, 3);
        t.equals(playdate.graphics.sprite.kCollisionTypeFreeze, 1);
        t.equals(playdate.graphics.sprite.kCollisionTypeOverlap, 2);
        t.equals(playdate.graphics.sprite.kCollisionTypeSlide, 0);
    });

    suite.spec('playdate.keyboard', (t) => {
        t.equals(playdate.keyboard.kCapitalizationNormal, 1);
        t.equals(playdate.keyboard.kCapitalizationWords, 2);
        t.equals(playdate.keyboard.kCapitalizationSentences, 3);
    });

    suite.spec('playdate.network', (t) => {
        t.equals(playdate.network.kStatusNotConnected, 0);
        t.equals(playdate.network.kStatusConnected, 1);
        t.equals(playdate.network.kStatusNotAvailable, 2);
    });

    suite.spec('playdate.sound', (t) => {
        t.equals(playdate.sound.kFormat16bitMono, 2);
        t.equals(playdate.sound.kFormat16bitStereo, 3);
        t.equals(playdate.sound.kFormat8bitMono, 0);
        t.equals(playdate.sound.kFormat8bitStereo, 1);
        t.equals(playdate.sound.kWaveNoise, 3);
        t.equals(playdate.sound.kWavePODigital, 6);
        t.equals(playdate.sound.kWavePOPhase, 5);
        t.equals(playdate.sound.kWavePOVosim, 7);
        t.equals(playdate.sound.kWaveSawtooth, 4);
        t.equals(playdate.sound.kWaveSine, 2);
        t.equals(playdate.sound.kWaveSquare, 0);
        t.equals(playdate.sound.kWaveTriangle, 1);
        t.equals(playdate.sound.kLFOSampleAndHold, 3);
        t.equals(playdate.sound.kLFOSawtoothDown, 5);
        t.equals(playdate.sound.kLFOSawtoothUp, 4);
        t.equals(playdate.sound.kLFOSine, 2);
        t.equals(playdate.sound.kLFOSquare, 0);
        t.equals(playdate.sound.kLFOTriangle, 1);
        t.equals(playdate.sound.kFilterBandPass, 2);
        t.equals(playdate.sound.kFilterHighPass, 1);
        t.equals(playdate.sound.kFilterHighShelf, 6);
        t.equals(playdate.sound.kFilterLowPass, 0);
        t.equals(playdate.sound.kFilterLowShelf, 5);
        t.equals(playdate.sound.kFilterNotch, 3);
        t.equals(playdate.sound.kFilterPEQ, 4);
    });
    // @crankscript-constant-tests-end
});
